{"version":3,"sources":["data sync /^/.//season_.*/.json$","data sync /^/.//season_.*//items//passive_items/.json$","data sync /^/.//season_.*//items//energy_items/.json$","data sync /^/.//season_.*//mobs//summon_templates/.json$","global.js","utils.js","data.js","components/Dropdown.js","dungeonUtils.js","localStorageUtils.js","worker.js","items.js","character.js","battle.js","simulator.js","test.js","components/OutputLogs.js","components/ItemDropdown.js","components/LoadPlayerSection.js","components/MonumentInput.js","components/MonumentsSection.js","components/PlayerSummary.js","components/PlayerForm.js","components/Simulator.js","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","global","verbose","output","season","format","args","arguments","replace","match","number","index","parseInt","log","logWithClassName","className","shouldOutput","toLog","console","currLength","length","push","extend","iterable1","iterable2","withProbability","p","Math","random","pickRandom","iterable","weightKey","selected","total","i","weight","currentValue","pickRandomWithinRange","lower","upper","floor","evalThreeFunctions","expr","splitPlus","split","splitMinus","negTotal","val","product","splitMult","deepCopyJson","obj","JSON","parse","stringify","MOBS_BY_SEASON","ITEMS_BY_SEASON","ITEM_NAMES_BY_SEASON","TEMPLATES_BY_SEASON","getDungeon","dungeon","dungeonsForSeason","waves","require","wave","j","character","getItems","passive","energy","Dropdown","props","value","selectedOption","onChange","options","option","getDescriptionOfItem","item","items","data","itemData","name","description","tier","re","current","m","utils","formatDescriptionWithTier","parseMonuments","input","monumentLevels","line","startsWith","Angel","matches","parseInventory","player","username","empty","matchUsername","matchItem","serializePlayer","monument","monuments","join","_mutateTemplate","template","scale","base","scaling","key","getScaledTemplate","processedInitCharacter","useStateWithLocalStorage","defaultState","startingState","window","localStorage","getItem","useState","setValueHelper","newValue","setItem","Worker_fn","Worker","ABILITY_FOR_ITEM","params","phase","enemyTeam","target","takeDamage","source","amount","battle","changeSpeed","_throwInvalidPhaseError","currentTarget","hp","enemy","changeHp","damageBase","changeAttack","changeHpMax","usedCannon","damageFinal","round","allyTeam","c","summoned","allyTeamIndex","summonedChicken","summonedChickenStatue","addSummonToTeam","pickTargetUsingItems","activeTeamIndex","ally","damageAmount","Infinity","targetIsMaxHp","allyIsMaxHp","hpMax","changeEnergy","attackIncrease","damage","max","teams","getTeamOf","poison","poisonAmount","punched","missingHpProportion","addedEnergy","useItemAbility","originalEnergy","cost","_checkEnergy","_extractParam","param","defaultValue","Character","this","speed","attackLow","attackHigh","angelAvailable","canBeSaved","_preprocessTriggers","allItems","triggers","triggerTypes","triggerType","originalHpMax","originalHp","min","originalSpeed","originalAttackLow","originalAttackHigh","amountToGain","phaseParams","triggerPhase","activeCharacter","ret","assign","prototype","toString","Battle","team1","team2","initTeams","teamIndex","allCharacters","team","addCopyOfCharacterToTeam","originalName","copyNum","toAdd","addCharacterToTeam","summon","dungeonUtils","pos","position","_findPositionWithinTeam","splice","kill","teamHasLost","anyTeamHasLost","activeName","defendingTeam","changeAllEnergy","checkAllHp","blockParams","preDamageParams","runDungeon","currTeam","tick","workerPool","Comlink","outputManyRuns","players","selectedDungeon","numRuns","a","progressCallback","toEquip","itemsToPrint","Health","Power","Speed","doRunsInWorker","runPromiseResults","numWins","reduce","acc","cur","mean","b","stdDev","sqrt","startedRuns","completedRuns","currentWorker","workerPromises","handleRunResult","result","then","Promise","all","OutputLogs","ItemDropdown","itemNames","obtainableItems","fusionItems","unobtainableItems","type","fusion","obtainable","sort","getAllItemNamesAndBlank","event","onItemChanged","LoadPlayerSection","rawInput","setRawInput","newPlayer","newMonuments","onPlayerChanged","onClick","navigator","clipboard","writeText","MonumentInput","onValueChanged","MonumentsSection","newHealth","onMonumentsChanged","newPower","newSpeed","checked","Stats","stats","PlayerSummary","isExpanded","setIsExpanded","icon","faCaretUp","faCaretDown","PlayerForm","newItems","Simulator","dungeonList","dungeonsBySeason","reverse","runsCompleted","setRunsCompleted","localStorageUtils","setNumRuns","setSelectedDungeon","outputText","setOutputText","getInitialPlayer","setPlayers","message","clear","location","reload","newParty","rawPlayer","parsePlayers","pop","newPlayers","onRunMany","simulator","outputSingleRun","err","App","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89310dd5.chunk.js","sourcesContent":["var map = {\n\t\"./season_2/items/energy_items.json\": 20,\n\t\"./season_2/items/passive_items.json\": 21,\n\t\"./season_2/mobs/dungeon_0.json\": 41,\n\t\"./season_2/mobs/dungeon_1.json\": 42,\n\t\"./season_2/mobs/dungeon_10.json\": 43,\n\t\"./season_2/mobs/dungeon_2.json\": 44,\n\t\"./season_2/mobs/dungeon_3.json\": 45,\n\t\"./season_2/mobs/dungeon_4.json\": 46,\n\t\"./season_2/mobs/dungeon_5.json\": 47,\n\t\"./season_2/mobs/dungeon_6.json\": 48,\n\t\"./season_2/mobs/dungeon_7.json\": 49,\n\t\"./season_2/mobs/dungeon_8.json\": 50,\n\t\"./season_2/mobs/dungeon_9.json\": 51,\n\t\"./season_2/mobs/summon_templates.json\": 22,\n\t\"./season_3/items/energy_items.json\": 23,\n\t\"./season_3/items/passive_items.json\": 24,\n\t\"./season_3/mobs/dungeon_0.json\": 52,\n\t\"./season_3/mobs/dungeon_1.json\": 53,\n\t\"./season_3/mobs/dungeon_10.json\": 54,\n\t\"./season_3/mobs/dungeon_11.json\": 55,\n\t\"./season_3/mobs/dungeon_2.json\": 56,\n\t\"./season_3/mobs/dungeon_3.json\": 57,\n\t\"./season_3/mobs/dungeon_4.json\": 58,\n\t\"./season_3/mobs/dungeon_5.json\": 59,\n\t\"./season_3/mobs/dungeon_6.json\": 60,\n\t\"./season_3/mobs/dungeon_7.json\": 61,\n\t\"./season_3/mobs/dungeon_8.json\": 62,\n\t\"./season_3/mobs/dungeon_9.json\": 63,\n\t\"./season_3/mobs/summon_templates.json\": 25,\n\t\"./season_4/items/energy_items.json\": 26,\n\t\"./season_4/items/passive_items.json\": 27,\n\t\"./season_4/mobs/dungeon_0.json\": 64,\n\t\"./season_4/mobs/dungeon_1.json\": 65,\n\t\"./season_4/mobs/dungeon_10.json\": 66,\n\t\"./season_4/mobs/dungeon_11.json\": 67,\n\t\"./season_4/mobs/dungeon_2.json\": 68,\n\t\"./season_4/mobs/dungeon_3.json\": 69,\n\t\"./season_4/mobs/dungeon_4.json\": 70,\n\t\"./season_4/mobs/dungeon_5.json\": 71,\n\t\"./season_4/mobs/dungeon_6.json\": 72,\n\t\"./season_4/mobs/dungeon_7.json\": 73,\n\t\"./season_4/mobs/dungeon_8.json\": 74,\n\t\"./season_4/mobs/dungeon_9.json\": 75,\n\t\"./season_4/mobs/summon_templates.json\": 28,\n\t\"./season_5/items/energy_items.json\": 29,\n\t\"./season_5/items/passive_items.json\": 30,\n\t\"./season_5/mobs/dungeon_0.json\": 76,\n\t\"./season_5/mobs/dungeon_1.json\": 77,\n\t\"./season_5/mobs/dungeon_10.json\": 78,\n\t\"./season_5/mobs/dungeon_11.json\": 79,\n\t\"./season_5/mobs/dungeon_12.json\": 80,\n\t\"./season_5/mobs/dungeon_2.json\": 81,\n\t\"./season_5/mobs/dungeon_3.json\": 82,\n\t\"./season_5/mobs/dungeon_4.json\": 83,\n\t\"./season_5/mobs/dungeon_5.json\": 84,\n\t\"./season_5/mobs/dungeon_6.json\": 85,\n\t\"./season_5/mobs/dungeon_7.json\": 86,\n\t\"./season_5/mobs/dungeon_8.json\": 87,\n\t\"./season_5/mobs/dungeon_9.json\": 88,\n\t\"./season_5/mobs/summon_templates.json\": 31\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 40;","var map = {\n\t\"./season_2/items/passive_items.json\": 21,\n\t\"./season_3/items/passive_items.json\": 24,\n\t\"./season_4/items/passive_items.json\": 27,\n\t\"./season_5/items/passive_items.json\": 30\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 90;","var map = {\n\t\"./season_2/items/energy_items.json\": 20,\n\t\"./season_3/items/energy_items.json\": 23,\n\t\"./season_4/items/energy_items.json\": 26,\n\t\"./season_5/items/energy_items.json\": 29\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 91;","var map = {\n\t\"./season_2/mobs/summon_templates.json\": 22,\n\t\"./season_3/mobs/summon_templates.json\": 25,\n\t\"./season_4/mobs/summon_templates.json\": 28,\n\t\"./season_5/mobs/summon_templates.json\": 31\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 92;","export const global = {\r\n  verbose: false,\r\n  output: null,\r\n  season: 5\r\n}\r\n","import { global } from './global.js'\r\n\r\nexport function format() {\r\n  const args = arguments;\r\n  return args[0].replace(/{(\\d+)}/g, function(match, number) {\r\n      const index = parseInt(number) + 1;\r\n      return typeof[args[index]] !== 'undefined'\r\n        ? args[index]\r\n        : match;\r\n  });\r\n}\r\n\r\nexport function log() {\r\n  logWithClassName(arguments, null);\r\n}\r\n\r\nexport function logWithClassName(args, className) {\r\n  if (!global.verbose && global.output === null) {\r\n    return;\r\n  }\r\n  const shouldOutput = typeof args[0] === 'string';\r\n  const toLog = shouldOutput\r\n      ? format(...args)\r\n      : args[0];\r\n  if (global.verbose) {\r\n    console.log(toLog);\r\n  }\r\n  if (shouldOutput && global.output !== null) {\r\n    const currLength = global.output.length;\r\n    global.output.push(className === null ?\r\n                       <div key={currLength}>{toLog}</div> :\r\n                       <div key={currLength} className={className}>{toLog}</div>);\r\n  }\r\n}\r\n\r\nexport function extend(iterable1, iterable2) {\r\n  for (const index in iterable2) {\r\n    iterable1.push(iterable2[index]);\r\n  }\r\n}\r\n\r\nexport function all(iterable, condition) {\r\n  return iterable.reduce((accumulator, currentValue) => {\r\n    return accumulator && condition(currentValue);\r\n  }, true);\r\n}\r\n\r\nexport function withProbability(p) {\r\n  return Math.random() < p;\r\n}\r\n\r\nexport function sum(iterable, key=null) {\r\n  var total = 0;\r\n  for (const i in iterable) {\r\n    const currentValue = iterable[i];\r\n    if (typeof key === 'function') {\r\n      total += key(currentValue);\r\n      continue;\r\n    }\r\n    if (key === null) {\r\n      if (typeof currentValue === 'number') {\r\n        total += currentValue;\r\n        continue;\r\n      }\r\n      total++;\r\n      continue;\r\n    }\r\n    if (key in currentValue) {\r\n      total += currentValue[key];\r\n      continue;\r\n    }\r\n  }\r\n  return total;\r\n}\r\n\r\nexport function pickRandom(iterable, weightKey=null) {\r\n  var selected = null;\r\n  var total = 0;\r\n  for (const i in iterable) {\r\n    const currentValue = iterable[i];\r\n    var weight;\r\n    if (typeof weightKey === 'function') {\r\n      weight = weightKey(currentValue);\r\n    } else if (weightKey === null) {\r\n      weight = typeof currentValue === 'number' ? currentValue : 1;\r\n    } else if (weightKey in currentValue) {\r\n      weight = currentValue[weightKey];\r\n    }\r\n    total += weight\r\n    if(withProbability(weight / total)) {\r\n      selected = currentValue;\r\n    }\r\n  }\r\n  return selected;\r\n}\r\n\r\nexport function pickRandomWithinRange(lower, upper) {\r\n  return lower + Math.floor(Math.random() * (upper - lower + 1));\r\n}\r\n\r\nexport function evalThreeFunctions(expr) {\r\n  if (expr.match(/^-?\\d+$/) !== null) {\r\n    return parseInt(expr);\r\n  }\r\n\r\n  const splitPlus = expr.split('+');\r\n  if (splitPlus.length > 1) {\r\n    var total = 0;\r\n    for (const val of splitPlus) {\r\n      total += evalThreeFunctions(val);\r\n    }\r\n    return total;\r\n  }\r\n\r\n  const splitMinus = expr.split('-');\r\n  if (splitMinus.length > 1) {\r\n    var negTotal = null;\r\n    for (const val of splitMinus) {\r\n      if (negTotal === null) {\r\n        negTotal = val === '' ? 0 : evalThreeFunctions(val);\r\n        continue;\r\n      }\r\n      negTotal -= evalThreeFunctions(val);\r\n    }\r\n    return negTotal;\r\n  }\r\n\r\n  var product = 1;\r\n  const splitMult = expr.split('*');\r\n  for (const val of splitMult) {\r\n    product *= parseInt(val);\r\n  }\r\n  return product;\r\n}\r\n\r\nexport function deepCopyJson(obj) {\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\n","import { global } from './global.js';\r\nimport * as utils from './utils.js';\r\n\r\nconst MOBS_BY_SEASON = {};\r\nconst ITEMS_BY_SEASON = {};\r\nconst ITEM_NAMES_BY_SEASON = {};\r\nconst TEMPLATES_BY_SEASON = {};\r\n\r\nexport function getDungeon(season, dungeon) {\r\n  if (!(season in MOBS_BY_SEASON)) {\r\n    MOBS_BY_SEASON[season] = {};\r\n  }\r\n  const dungeonsForSeason = MOBS_BY_SEASON[season];\r\n\r\n  if (!(dungeon in dungeonsForSeason)) {\r\n    const waves = require(\r\n        './data/season_' + season + '/mobs/dungeon_' + dungeon + '.json');\r\n    for (const i in waves) {\r\n      const wave = waves[i];\r\n      for (const j in wave) {\r\n        const character = wave[j];\r\n        if ('_stats' in character) {\r\n          delete character['_stats'];\r\n        }\r\n      }\r\n    }\r\n    dungeonsForSeason[dungeon] = waves;\r\n  }\r\n\r\n  return dungeonsForSeason[dungeon];\r\n}\r\n\r\nexport function getDungeonList() {\r\n  const dungeonsBySeason = require('./data/dungeons.json');\r\n  const dungeonList = [];\r\n\r\n  const keys = Object.keys(dungeonsBySeason);\r\n  keys.sort().reverse();\r\n  for (const season of keys) {\r\n    for (const dungeon of dungeonsBySeason[season]) {\r\n      dungeonList.push(JSON.stringify([parseInt(season), dungeon]));\r\n    }\r\n  }\r\n  return dungeonList;\r\n}\r\n\r\nexport function getItems() {\r\n  if (!(global.season in ITEMS_BY_SEASON)) {\r\n    ITEMS_BY_SEASON[global.season] = {\r\n      passive: require(\r\n          './data/season_' + global.season + '/items/passive_items.json'),\r\n      energy: require(\r\n          './data/season_' + global.season + '/items/energy_items.json')\r\n    };\r\n  }\r\n  return ITEMS_BY_SEASON[global.season];\r\n}\r\n\r\nexport function getAllItemNamesAndBlank() {\r\n  if (!(global.season in ITEM_NAMES_BY_SEASON)) {\r\n    const items = getItems();\r\n    const obtainableItems = [];\r\n    const fusionItems = [];\r\n    const unobtainableItems = [];\r\n    for (const type of ['energy', 'passive']) {\r\n      for (const item in items[type]) {\r\n        if (items[type][item].fusion) {\r\n          fusionItems.push(item);\r\n          continue;\r\n        }\r\n        if (items[type][item].obtainable) {\r\n          obtainableItems.push(item);\r\n          continue;\r\n        }\r\n        unobtainableItems.push(item);\r\n      }\r\n    }\r\n    obtainableItems.sort();\r\n    fusionItems.sort();\r\n    unobtainableItems.sort();\r\n\r\n    const itemNames = [''];\r\n    utils.extend(itemNames, obtainableItems);\r\n    itemNames.push('');\r\n    utils.extend(itemNames, fusionItems);\r\n    itemNames.push('');\r\n    utils.extend(itemNames, unobtainableItems);\r\n    ITEM_NAMES_BY_SEASON[global.season] = itemNames;\r\n  }\r\n  return ITEM_NAMES_BY_SEASON[global.season];\r\n}\r\n\r\nexport function getTemplates() {\r\n  if (!(global.season in TEMPLATES_BY_SEASON)) {\r\n    TEMPLATES_BY_SEASON[global.season] = require(\r\n        './data/season_' + global.season + '/mobs/summon_templates.json');\r\n  }\r\n  return TEMPLATES_BY_SEASON[global.season];\r\n}\r\n","function Dropdown(props) {\r\n  return (\r\n    <select className={props.className} value={props.selectedOption} onChange={props.onChange}>\r\n      {props.options.map((option, index) => <option key={index}>{option}</option>)}\r\n    </select>\r\n  );\r\n}\r\n\r\nexport default Dropdown;\r\n","import * as data from './data.js';\r\nimport * as utils from './utils.js';\r\n\r\nfunction formatDescriptionWithTier(description, tier) {\r\n  const re = /\\{([\\dt+\\-*]+)\\}/;\r\n  var current = description;\r\n  var m = current.match(re);\r\n  while (m != null) {\r\n    current = current.replace(\r\n        m[0],\r\n        utils.evalThreeFunctions(m[1].replace('t', tier))\r\n    );\r\n    m = current.match(re);\r\n  }\r\n  return current;\r\n}\r\n\r\nexport function getDescriptionOfItem(item) {\r\n  const items = data.getItems();\r\n  const itemData = item.name in items.passive ?\r\n    items.passive[item.name] :\r\n    items.energy[item.name];\r\n  if (typeof itemData === 'undefined') {\r\n    return '';\r\n  }\r\n  return formatDescriptionWithTier(itemData.description, item.tier);\r\n}\r\n\r\nexport function parseMonuments(input) {\r\n  const monumentLevels = {};\r\n  for (const line of input.split('\\n')) {\r\n    if (line.startsWith('BDSM:Angel:')) {\r\n      monumentLevels.Angel = line[line.length - 1] !== '0';\r\n      continue;\r\n    }\r\n    const matches = line.match(/\\|\\s*(Health|Power|Speed)\\s*\\|\\s*(\\d+)\\s*\\|/);\r\n    if (matches === null) {\r\n      continue;\r\n    }\r\n    monumentLevels[matches[1]] = parseInt(matches[2]);\r\n  }\r\n  return monumentLevels;\r\n}\r\n\r\nexport function parseInventory(input) {\r\n  const player = {username: '', items: []};\r\n  var empty = true;\r\n  for (const line of input.split('\\n')) {\r\n    const matchUsername = line.match(/([^*]*)'s Inventory/);\r\n    const matchItem = line.match(\r\n        /\\d-\\s(_{0,2}<?[\\w\\d:]+>?)?\\s([\\w'\\s]+)\\s(\\d+)_{0,2}:/);\r\n    if (matchUsername !== null) {\r\n      empty = false;\r\n      player.username = matchUsername[1];\r\n    }\r\n    if (matchItem !== null) {\r\n      empty = false;\r\n      player.items.push({name: matchItem[2], tier: parseInt(matchItem[3])});\r\n    }\r\n  }\r\n  if (empty) {\r\n    return null;\r\n  }\r\n  if (player.items.length > 4) {\r\n    return null;\r\n  }\r\n  for (var i = player.items.length; i < 4; i++) {\r\n    player.items.push({name: '', tier: 1});\r\n  }\r\n  return player;\r\n}\r\n\r\nexport function serializePlayer(player) {\r\n  const output = [];\r\n  output.push(utils.format(\"{0}'s Inventory\", player.username));\r\n  for (const item of player.items) {\r\n    output.push(utils.format('1-  {0} {1}:', item.name, item.tier));\r\n  }\r\n  for (const monument in player.monuments) {\r\n    if (monument === 'Angel') {\r\n      output.push(utils.format('BDSM.Angel.{0}',\r\n                               player.monuments.Angel ? '1' : '0'));\r\n      continue;\r\n    }\r\n    output.push(utils.format('|{0}|{1}|',\r\n                             monument,\r\n                             player.monuments[monument]));\r\n  }\r\n  return output.join('\\n');\r\n}\r\n\r\nexport function serializePlayers(players) {\r\n  const output = ['BDSM.partyStart'];\r\n  for (const player of players) {\r\n    output.push(serializePlayer(player));\r\n    output.push('BDSM.playerDivider');\r\n  }\r\n  output.pop();\r\n  return output.join('\\n');\r\n}\r\n\r\nfunction _mutateTemplate(template, scale) {\r\n  if (typeof template != 'object') {\r\n    return template;\r\n  }\r\n\r\n  if ('base' in template && 'scaling' in template) {\r\n    return template.base + template.scaling * scale;\r\n  }\r\n\r\n  // recursive check\r\n  for (const key in template) {\r\n    template[key] = _mutateTemplate(template[key], scale);\r\n  }\r\n  return template;\r\n}\r\n\r\nexport function getScaledTemplate(template, scale) {\r\n  const obj = utils.deepCopyJson(template);\r\n  _mutateTemplate(obj, scale);\r\n  obj.processedInitCharacter = false;\r\n  return obj;\r\n}\r\n","import { useState } from 'react';\n\nexport function setItem(key, value) {\n  return window.localStorage.setItem(key, JSON.stringify(value));\n}\n\nexport function getItem(key) {\n  if (window.localStorage.getItem(key) === null) {\n    return null;\n  }\n  return JSON.parse(window.localStorage.getItem(key));\n}\n\nexport function useStateWithLocalStorage(key, defaultState) {\n  var startingState = getItem(key);\n  if (startingState === null) {\n    startingState = defaultState;\n  }\n\n  const [value, setValueHelper] = useState(startingState);\n  function setValue(newValue) {\n    setValueHelper(newValue);\n    setItem(key, newValue);\n  }\n  return [value, setValue];\n}\n\nexport function clear() {\n  return localStorage.clear();\n}\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/worker.341d2e64.worker.js\");\n}\n","import * as data from './data.js';\r\nimport * as utils from './utils.js';\r\n\r\nconst ABILITY_FOR_ITEM = {\r\n  'Avalanche': avalanche,\r\n  'Barbarian Pendant': barbarianPendant,\r\n  'BF Cannon': bfCannon,\r\n  'Big Club': bigClub,\r\n  'Boosting Bugle': boostingBugle,\r\n  'Chicken Statue': chickenStatue,\r\n  'Chumby Chicken': chumbyChicken,\r\n  'Challenger Arrow': challengerArrow,\r\n  'Chicken Dinner': chickenDinner,\r\n  'Cleansed Tome': cleansedTome,\r\n  'Cleansing Flames': cleansingFlames,\r\n  'Draining Dagger': drainingDagger,\r\n  'Draining Machete': drainingMachete,\r\n  'Energetic Ally': energeticAlly,\r\n  'Explosion Powder': explosionPowder,\r\n  'Festive Feast': festiveFeast,\r\n  'Fire-Forged Friendship': fireForgedFriendship,\r\n  'Fire Sword': fireSword,\r\n  'Freezeman': freezeman,\r\n  'Halberd': halberd,\r\n  'Healing Pendant': healingPendant,\r\n  'Hunter\\'s Halberd': huntersHalberd,\r\n  'Imp Horn': impHorn,\r\n  'Imp Whistle': impWhistle,\r\n  'Knight\\'s Lance': knightsLance,\r\n  'Last Resort': lastResort,\r\n  'Love Letter': loveLetter,\r\n  'Machete': machete,\r\n  'Magic Parasol': magicParasol,\r\n  'Martyr Armor': martyrArmor,\r\n  'Pet Imp': petImp,\r\n  'Poison Dagger': poisonDagger,\r\n  'Poison Tipped Machete': poisonTippedMachete,\r\n  'Punching Bag': punchingBag,\r\n  'Quickening Death': quickeningDeath,\r\n  'Quickening Death: Focused': quickeningDeathFocused,\r\n  'Rock Companion': rockCompanion,\r\n  'Rough Skin': roughSkin,\r\n  'Rousing Death': rousingDeath,\r\n  'Seeking Explosions': seekingExplosions,\r\n  'Seeking Missiles': seekingMissiles,\r\n  'Survival Kit': survivalKit,\r\n  'Thorns': thorns,\r\n  'Trusty Steed': trustySteed,\r\n  'Whirlwind Axe': whirlwindAxe\r\n}\r\n\r\nexport function useItemAbility(params) {\r\n  if (params.item.name in data.getItems().energy && !_checkEnergy(params)) {\r\n    return;\r\n  }\r\n  return ABILITY_FOR_ITEM[params.item.name](params);\r\n}\r\n\r\nfunction _checkEnergy(params) {\r\n  const originalEnergy = params.character.energy;\r\n  const cost = data.getItems().energy[params.item.name].cost;\r\n  if (originalEnergy < cost) {\r\n    return false;\r\n  }\r\n  utils.log('Activating {0}', params.item.name);\r\n  params.character.changeEnergy({amount: -cost});\r\n  return true;\r\n}\r\n\r\nfunction _throwInvalidPhaseError(params) {\r\n  throw Error(utils.format('InternalError: Item {0} does not have phase {1}',\r\n                           params.item.name, params.phase));\r\n}\r\n\r\nfunction avalanche(params) {\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const enemyTeam = params.enemyTeam;\r\n      const tier = params.item.tier;\r\n      for (var i = 0; i < 2; i++) {\r\n        const target = utils.pickRandom(enemyTeam);\r\n        target.takeDamage({\r\n          source: params.character,\r\n          amount: utils.pickRandomWithinRange(3 * tier, 5 * tier),\r\n          battle: params.battle\r\n        });\r\n        target.changeSpeed({\r\n          amount: -utils.pickRandomWithinRange(0, tier)\r\n        });\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction barbarianPendant(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Block': {\r\n      if (!utils.withProbability(0.36 + 0.04 * tier)) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.character === params.character.character) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.hp < params.character.hp) {\r\n        utils.log(\r\n            '{0} blocks for {1}',\r\n            params.character.character,\r\n            params.currentTarget.character\r\n        );\r\n        params.currentTarget = params.character;\r\n        break;\r\n      }\r\n      utils.log(\r\n          '{0} is a coward',\r\n          params.character.character,\r\n      );\r\n      break;\r\n    }\r\n    case 'PreDamage': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      for (const enemy of params.enemyTeam) {\r\n        params.character.changeHp({amount: 9 + tier});\r\n        if (enemy.character === params.currentTarget.character) {\r\n          continue;\r\n        }\r\n        enemy.takeDamage({\r\n            source: params.character,\r\n            amount: params.damageBase,\r\n            battle: params.battle\r\n        });\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction bfCannon(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.character.changeAttack({amount: 6 + 6 * tier});\r\n      params.character.changeHpMax({amount: 7 * tier});\r\n      params.character.changeHp({amount: 7 * tier});\r\n      break;\r\n    }\r\n    case 'SkipTurn': {\r\n      if (params.character.usedCannon) {\r\n        utils.log('Activating {0}: Skipping Turn', params.item.name);\r\n        params.character.usedCannon = false;\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    case 'PostDamage': {\r\n      params.character.usedCannon = true;\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction bigClub(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PreDamage': {\r\n      if (!utils.withProbability(0.11 * tier)) {\r\n        break;\r\n      }\r\n      utils.log('Activated {0}', params.item.name);\r\n      params.damageFinal += Math.round(1.5 * params.damageBase);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction boostingBugle(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostTarget': {\r\n      const allyTeam = params.allyTeam;\r\n      if (allyTeam.length === 1) {\r\n        break;\r\n      }\r\n      for (var i = 0; i < 2; i++) {\r\n        const target = utils.pickRandom(\r\n            allyTeam,\r\n            (c) => {\r\n              if (c.summoned) {\r\n                return 0;\r\n              }\r\n              if (c.character === params.character.character) {\r\n                return 0;\r\n              }\r\n              return 1;\r\n            }\r\n        );\r\n        if (target === null) {\r\n          break;\r\n        }\r\n        target.changeHp({amount: tier + tier});\r\n        target.changeAttack({amount: tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction chickenStatue(params) {\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const allyTeamIndex = params.allyTeamIndex;\r\n      if (params.character.character in params.battle.summonedChicken) {\r\n        break;\r\n      }\r\n      params.battle.summonedChickenStatue[params.character.character] = 0;\r\n      params.battle.addSummonToTeam(params.item, allyTeamIndex);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction chumbyChicken(params) {\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const allyTeamIndex = params.allyTeamIndex;\r\n      if (params.character.character in params.battle.summonedChicken) {\r\n        break;\r\n      }\r\n      params.battle.summonedChicken[params.character.character] = 0;\r\n      params.battle.addSummonToTeam(params.item, allyTeamIndex);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction challengerArrow(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const target = params.character.pickTargetUsingItems(params.enemyTeam);\r\n      target.takeDamage({\r\n          source: params.character,\r\n          amount: 10 * tier,\r\n          battle: params.battle\r\n      });\r\n      params.character.changeAttack({amount: 2*tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction chickenDinner(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Death': {\r\n      if (params.battle.activeTeamIndex === params.allyTeamIndex) {\r\n        break;\r\n      }\r\n      for (const ally of params.allyTeam) {\r\n        if (ally.character === params.character.character) {\r\n          continue;\r\n        }\r\n        ally.changeHp({amount: 1 + 2 * tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction cleansedTome(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      const amount = 5 * tier;\r\n      params.character.changeHpMax({amount: amount});\r\n      params.character.changeHp({amount: amount});\r\n      break;\r\n    }\r\n    case 'PostTarget': {\r\n      const damageAmount = tier;\r\n      if (damageAmount >= params.character.hp) {\r\n        utils.log('Not activating {0}: not enough HP', params.item.name);\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      const allyTeam = params.allyTeam;\r\n      var target = {hp: Infinity};\r\n      var targetIsMaxHp = true;\r\n      for (const ally of allyTeam) {\r\n        if (ally.summoned) {\r\n          continue;\r\n        }\r\n        const allyIsMaxHp = ally.hp === ally.hpMax;\r\n        if (allyIsMaxHp && !targetIsMaxHp) {\r\n          continue;\r\n        }\r\n        if (ally.hp >= target.hp) {\r\n          continue;\r\n        }\r\n        target = ally;\r\n        targetIsMaxHp = allyIsMaxHp;\r\n      }\r\n      if (target.hp === Infinity) {\r\n        break;\r\n      }\r\n      params.character.changeHp({amount: -damageAmount});\r\n      target.changeHp({amount: 3 * tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction cleansingFlames(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostDamage': {\r\n      const allyTeam = params.allyTeam;\r\n      if (!utils.withProbability(0.5)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      for (const ally of allyTeam) {\r\n        ally.changeHp({amount: tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction drainingDagger(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostTarget': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.currentTarget.changeAttack({amount: -tier});\r\n      if (utils.withProbability(0.2)) {\r\n        params.currentTarget.changeEnergy({amount: -tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction drainingMachete(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostTarget': {\r\n      if (enemyTeam.length === 1) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.currentTarget.changeAttack({amount: -(7 + tier)});\r\n\r\n      const enemyTeam = params.enemyTeam;\r\n      const target = utils.pickRandom(\r\n          enemyTeam,\r\n          (c) => {\r\n            if (c.character === params.currentTarget.character) {\r\n              return 0;\r\n            }\r\n            return 1;\r\n          }\r\n      );\r\n      target.takeDamage({\r\n          source: params.character,\r\n          amount: utils.pickRandomWithinRange(3 * tier + 22, 4 * tier + 31),\r\n          battle: params.battle\r\n      });\r\n      target.changeAttack({amount: -(7 + tier)});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction energeticAlly(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostTarget': {\r\n      const allyTeam = params.allyTeam;\r\n      var target = {hp: Infinity};\r\n      var targetIsMaxHp = true;\r\n      for (const ally of allyTeam) {\r\n        if (ally.summoned) {\r\n          continue;\r\n        }\r\n        const allyIsMaxHp = ally.hp === ally.hpMax;\r\n        if (allyIsMaxHp && !targetIsMaxHp) {\r\n          continue;\r\n        }\r\n        if (ally.hp >= target.hp) {\r\n          continue;\r\n        }\r\n        target = ally;\r\n        targetIsMaxHp = allyIsMaxHp;\r\n      }\r\n      if (target.hp === Infinity) {\r\n        break;\r\n      }\r\n      target.changeHp({amount: 5 * tier});\r\n      target.changeEnergy({amount: 20});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction explosionPowder(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const enemyTeam = params.enemyTeam;\r\n      if (enemyTeam.length === 1) {\r\n        const target = enemyTeam[Object.keys(enemyTeam)[0]];\r\n        target.takeDamage({\r\n            source: params.character,\r\n            amount: utils.pickRandomWithinRange(10 * tier, 20 * tier),\r\n            battle: params.battle\r\n        });\r\n        break;\r\n      }\r\n      for (const enemy of enemyTeam) {\r\n        enemy.takeDamage({\r\n            source: params.character,\r\n            amount: utils.pickRandomWithinRange(5 * tier, 10 * tier),\r\n            battle: params.battle\r\n        });\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction festiveFeast(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      for (const enemy of params.enemyTeam) {\r\n        enemy.takeDamage({\r\n            source: params.character,\r\n            amount: 3 * tier,\r\n            battle: params.battle\r\n        });\r\n      }\r\n      for (const ally of params.allyTeam) {\r\n        ally.changeHp({amount: 3 * tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction fireForgedFriendship(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostDamage': {\r\n      if (!utils.withProbability(0.33)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      for (const ally of params.allyTeam) {\r\n        ally.changeHp({amount: 9 + tier});\r\n        ally.changeAttack({amount: 3 + tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction fireSword(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostDamage': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      var attackIncrease = 0;\r\n      for (var i = 0; i < tier; i++) {\r\n        if (!utils.withProbability(0.3)) {\r\n          continue;\r\n        }\r\n        attackIncrease++;\r\n      }\r\n      params.character.changeAttack({amount: attackIncrease});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction freezeman(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.character.changeSpeed({amount: tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction halberd(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.character.changeAttack({amount: tier + tier});\r\n      params.character.changeHpMax({amount: 4 * tier});\r\n      params.character.changeHp({amount: 4 * tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction healingPendant(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostTarget': {\r\n      if (!utils.withProbability(0.5)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.character.changeHp({amount: 5 * tier});\r\n      break;\r\n    }\r\n    case 'Block': {\r\n      if (!utils.withProbability(0.07 + 0.03 * tier)) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.character === params.character.character) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.hp < params.character.hp) {\r\n        utils.log(\r\n            '{0} blocks for {1}',\r\n            params.character.character,\r\n            params.currentTarget.character\r\n        );\r\n        params.currentTarget = params.character;\r\n        break;\r\n      }\r\n      utils.log(\r\n          '{0} is a coward',\r\n          params.character.character,\r\n      );\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction huntersHalberd(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      const amount = 180 + 20 * tier;\r\n      params.character.changeHpMax({amount: amount});\r\n      params.character.changeHp({amount: amount});\r\n      params.character.changeAttack({amount: Math.round(0.05 * params.character.hpMax)});\r\n      break;\r\n    }\r\n    case 'Block': {\r\n      if (!utils.withProbability(0.36 + 0.04 * tier)) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.character === params.character.character) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.hp < params.character.hp) {\r\n        utils.log(\r\n            '{0} blocks for {1}',\r\n            params.character.character,\r\n            params.currentTarget.character\r\n        );\r\n        params.currentTarget = params.character;\r\n        break;\r\n      }\r\n      utils.log(\r\n          '{0} is a coward',\r\n          params.character.character,\r\n      );\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction impHorn(params) {\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      params.battle.addSummonToTeam(params.item, params.allyTeamIndex);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction impWhistle(params) {\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      params.battle.addSummonToTeam(params.item, params.allyTeamIndex);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction knightsLance(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const enemyTeam = params.enemyTeam;\r\n      const target = utils.pickRandom(enemyTeam);\r\n      if (params.character.hp === params.character.hpMax) {\r\n        target.takeDamage({\r\n            source: params.character,\r\n            amount: utils.pickRandomWithinRange(10 * tier, 14 * tier),\r\n            battle: params.battle\r\n        });\r\n        break;\r\n      }\r\n      const amount = utils.pickRandomWithinRange(5 * tier, 7 * tier);\r\n      target.takeDamage({\r\n          source: params.character,\r\n          amount: amount,\r\n          battle: params.battle\r\n      });\r\n      params.character.changeHp({amount: amount});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction lastResort(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Death': {\r\n      if (params.battle.activeTeamIndex === params.allyTeamIndex) {\r\n        break;\r\n      }\r\n      if (params.source === null) {\r\n        break;\r\n      }\r\n      params.source.takeDamage({\r\n        amount: 10 * tier,\r\n        battle: params.battle,\r\n        source: params.character\r\n      });\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction loveLetter(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostDamage': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      const allyTeam = params.allyTeam;\r\n      const target = utils.pickRandom(\r\n          allyTeam,\r\n          (c) => {\r\n            if (c.character === params.character.character) {\r\n              return 0;\r\n            }\r\n            if (c.summoned) {\r\n              return 0;\r\n            }\r\n            return 1;\r\n          }\r\n      );\r\n      if (target === null) {\r\n        break;\r\n      }\r\n      target.changeHp({amount: tier + tier});\r\n      target.changeEnergy({amount: tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction machete(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostTarget': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      const enemyTeam = params.enemyTeam;\r\n      if (enemyTeam.length === 1) {\r\n        break;\r\n      }\r\n      const target = utils.pickRandom(\r\n          enemyTeam,\r\n          (c) => {\r\n            if (c.character === params.currentTarget.character) {\r\n              return 0;\r\n            }\r\n            return 1;\r\n          }\r\n      );\r\n      target.takeDamage({\r\n          source: params.character,\r\n          amount: utils.pickRandomWithinRange(3 * tier, 4 * tier),\r\n          battle: params.battle\r\n      });\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction magicParasol(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Block': {\r\n      if (!utils.withProbability(0.07 + 0.03 * tier)) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.character === params.character.character) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.hp < params.character.hp) {\r\n        utils.log(\r\n            '{0} blocks for {1}',\r\n            params.character.character,\r\n            params.currentTarget.character\r\n        );\r\n        params.currentTarget = params.character;\r\n        break;\r\n      }\r\n      utils.log(\r\n          '{0} is a coward',\r\n          params.character.character,\r\n      );\r\n      break;\r\n    }\r\n    case 'EnemyDamage': {\r\n      if (!utils.withProbability(0.17 + 0.03 * tier)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.damage = Math.max(0, params.damage - 2 - 3 * tier);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction martyrArmor(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'EnemyDamage': {\r\n      if (!utils.withProbability(0.66)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      const target = utils.pickRandom(\r\n          params.battle.teams[\r\n              params.battle.getTeamOf[params.character.character]\r\n          ],\r\n          (c) => {\r\n            if (c.character === params.character.character) {\r\n              return 0;\r\n            }\r\n            if (c.summoned) {\r\n              return 0;\r\n            }\r\n            return 1;\r\n          }\r\n      );\r\n      if (target === null) {\r\n        break;\r\n      }\r\n      target.changeHp({amount: tier + tier});\r\n      target.changeEnergy({amount: tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction petImp(params) {\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      if (params.battle === null) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.battle.addSummonToTeam(params.item, params.allyTeamIndex);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction poisonTippedMachete(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostTarget': {\r\n      if (enemyTeam.length === 1) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      const poisonAmount = tier * 3 + 9;\r\n      params.currentTarget.poison += poisonAmount;\r\n      const enemyTeam = params.enemyTeam;\r\n      const target = utils.pickRandom(\r\n          enemyTeam,\r\n          (c) => {\r\n            if (c.character === params.currentTarget.character) {\r\n              return 0;\r\n            }\r\n            return 1;\r\n          }\r\n      );\r\n      target.takeDamage({\r\n          source: params.character,\r\n          amount: utils.pickRandomWithinRange(24 + 3 * tier, 32 + 4 * tier),\r\n          battle: params.battle\r\n      });\r\n      target.poison += poisonAmount;\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction poisonDagger(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.character.changeHpMax({amount: 3 * tier});\r\n      params.character.changeHp({amount: 3 * tier});\r\n      break;\r\n    }\r\n    case 'PostTarget': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.currentTarget.poison += tier;\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction punchingBag(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostTarget': {\r\n      const target = params.currentTarget;\r\n      const amount = utils.pickRandomWithinRange(5 * tier, 10 * tier);\r\n      target.takeDamage({\r\n          source: params.character,\r\n          amount: amount,\r\n          battle: params.battle\r\n      });\r\n      if (!utils.withProbability(0.28 + 0.08 * tier)) {\r\n        break;\r\n      }\r\n      utils.log('{0} stunned {1}', params.item.name, target.character);\r\n      target.punched = true;\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction quickeningDeath(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Death': {\r\n      if (params.battle.activeTeamIndex === params.allyTeamIndex) {\r\n        break;\r\n      }\r\n      for (const ally of params.allyTeam) {\r\n        if (ally.character === params.character.character) {\r\n          continue;\r\n        }\r\n        ally.changeSpeed({amount: tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction quickeningDeathFocused(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Death': {\r\n      if (params.battle.activeTeamIndex === params.allyTeamIndex) {\r\n        break;\r\n      }\r\n      const target = utils.pickRandom(params.allyTeam, (c) => {\r\n        if (c.character === params.character.character) {\r\n          return 0;\r\n        }\r\n        return 1;\r\n      });\r\n      if (target === null) {\r\n        break;\r\n      }\r\n      target.changeSpeed({amount: 5 * tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction rockCompanion(params) {\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      if (params.battle === null) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.battle.addSummonToTeam(params.item, params.allyTeamIndex);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction roughSkin(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'EnemyDamage': {\r\n      if (!utils.withProbability(0.5)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.damage = Math.max(0, params.damage - tier - tier);\r\n      params.source.changeHp({amount: -tier - tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction rousingDeath(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Death': {\r\n      if (params.battle.activeTeamIndex === params.allyTeamIndex) {\r\n        break;\r\n      }\r\n      for (const ally of params.allyTeam) {\r\n        if (ally.character === params.character.character) {\r\n          continue;\r\n        }\r\n        ally.changeEnergy({amount: 10 * tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction seekingExplosions(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostTarget': {\r\n      for (var i = 0; i < 4; i++) {\r\n        var target = {hp: Infinity};\r\n        for (const enemy of params.enemyTeam) {\r\n          if (enemy.hp <= 0) {\r\n            continue;\r\n          }\r\n          if (enemy.hp < target.hp) {\r\n            target = enemy;\r\n          }\r\n        }\r\n        if (target.hp === Infinity) {\r\n          break;\r\n        }\r\n        target.takeDamage({\r\n            source: params.character,\r\n            amount: utils.pickRandomWithinRange(40 + 5 * tier, 80 + 10 * tier),\r\n            battle: params.battle\r\n        });\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction seekingMissiles(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Target': {\r\n      var target = {hp: Infinity};\r\n      for (const enemy of params.enemyTeam) {\r\n        if (enemy.hp < target.hp) {\r\n          target = enemy;\r\n        }\r\n      }\r\n      if (target.hp === Infinity) {\r\n        throw Error('InternalError: No target in enemy team');\r\n      }\r\n      utils.log('{0} selected target {1}', params.item.name, target.character);\r\n      params.currentTarget = target;\r\n      break;\r\n    }\r\n    case 'PreDamage': {\r\n      const missingHpProportion =\r\n          1 - params.currentTarget.hp / params.currentTarget.hpMax;\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.damageFinal += Math.floor(5 * missingHpProportion * tier);\r\n      break;\r\n    }\r\n    case 'Kill': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.character.changeHp({amount: 6 * tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction survivalKit(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      const amount = 20 * tier;\r\n      params.character.changeHpMax({amount: amount});\r\n      params.character.changeHp({amount: amount});\r\n      break;\r\n    }\r\n    case 'Block': {\r\n      if (!utils.withProbability(0.07 + 0.03 * tier)) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.character === params.character.character) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.hp < params.character.hp) {\r\n        utils.log(\r\n            '{0} blocks for {1}',\r\n            params.character.character,\r\n            params.currentTarget.character\r\n        );\r\n        params.currentTarget = params.character;\r\n        break;\r\n      }\r\n      utils.log(\r\n          '{0} is a coward',\r\n          params.character.character,\r\n      );\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction thorns(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      var addedEnergy = false;\r\n      for (const enemy of params.enemyTeam) {\r\n        enemy.takeDamage({\r\n            source: params.character,\r\n            amount: tier,\r\n            battle: params.battle\r\n        });\r\n        if (addedEnergy) {\r\n          continue;\r\n        }\r\n        if (!utils.withProbability(0.25)) {\r\n          continue;\r\n        }\r\n        params.character.changeEnergy({amount: tier});\r\n        addedEnergy = true;\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction trustySteed(params) {\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      if (params.battle === null) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.battle.addSummonToTeam(params.item, params.allyTeamIndex);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction whirlwindAxe(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PreDamage': {\r\n      if (!utils.withProbability(0.11 * tier)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      for (const enemy of params.enemyTeam) {\r\n        if (enemy.character === params.currentTarget.character) {\r\n          continue;\r\n        }\r\n        enemy.takeDamage({\r\n            source: params.character,\r\n            amount: params.damageBase,\r\n            battle: params.battle\r\n        });\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n","import * as data from './data.js';\r\nimport * as items from './items.js';\r\nimport * as utils from './utils.js';\r\n\r\nexport function getBaseStats(player) {\r\n  const params = {\r\n    username: player.username,\r\n    items: [],\r\n    processedInitCharacter: false\r\n  }\r\n  for (const item of player.items) {\r\n    if (item.name === '') {\r\n      continue;\r\n    }\r\n    params.items.push(item);\r\n  }\r\n  const character = new Character(params);\r\n  character.changeHpMax({amount: player.monuments.Health * 5});\r\n  character.changeAttack({amount: player.monuments.Power});\r\n  character.changeSpeed({amount: player.monuments.Speed});\r\n  character.triggerPhase({\r\n    battle: null,\r\n    phase: 'InitCharacter'\r\n  });\r\n  return character;\r\n}\r\n\r\nfunction _extractParam(params, param, defaultValue) {\r\n  if (param in params) {\r\n    return params[param];\r\n  }\r\n  return defaultValue;\r\n}\r\n\r\nexport class Character {\r\n  constructor(params) {\r\n    this.character = _extractParam(params, 'character', 'Unknown');\r\n    this.hpMax = _extractParam(params, 'hpMax', 100);\r\n    this.hp = _extractParam(params, 'hp', this.hpMax);\r\n    this.speed = _extractParam(params, 'speed', 10);\r\n    this.attackLow = _extractParam(params, 'attackLow', 1);\r\n    this.attackHigh = _extractParam(params, 'attackHigh', 10);\r\n    this.energy = _extractParam(params, 'energy', 0);\r\n    this.summoned = _extractParam(params, 'summoned', false);\r\n    this.items = _extractParam(params, 'items', []);\r\n\r\n    this.angelAvailable = _extractParam(params, 'angelAvailable', false);\r\n    this.canBeSaved = _extractParam(params, 'canBeSaved', true);\r\n    this.poison = _extractParam(params, 'poison', 0);\r\n    this.usedCannon = _extractParam(params, 'usedCannon', false);\r\n    this.punched = _extractParam(params, 'punched', false);\r\n    this._preprocessTriggers();\r\n    this.processedInitCharacter =\r\n        _extractParam(params, 'processedInitCharacter', true);\r\n  }\r\n\r\n  _preprocessTriggers() {\r\n    if ('triggers' in this) {\r\n      return;\r\n    }\r\n    const allItems = data.getItems();\r\n    const triggers = {};\r\n    for (const item of this.items) {\r\n      const triggerTypes = item.name in allItems.energy\r\n          ? allItems.energy[item.name].triggers\r\n          : allItems.passive[item.name].triggers;\r\n      for (const triggerType of triggerTypes) {\r\n        if (!(triggerType in triggers)) {\r\n          triggers[triggerType] = [item];\r\n          continue;\r\n        }\r\n        triggers[triggerType].push(item);\r\n      }\r\n    }\r\n    this.triggers = triggers;\r\n  }\r\n\r\n  deepCopy() {\r\n    const params = utils.deepCopyJson(this);\r\n    return new Character(params);\r\n  }\r\n\r\n  changeHpMax(params) {\r\n    const originalHpMax = this.hpMax;\r\n    this.hpMax += params.amount;\r\n    utils.log('{0} max hp changed by {1}: {2} -> {3}',\r\n              this.character, params.amount, originalHpMax, this.hpMax);\r\n  }\r\n\r\n  changeHp(params) {\r\n    const originalHp = this.hp;\r\n    if (originalHp <= 0 && params.amount > 0) {\r\n      // Dead characters cannot be healed\r\n      return;\r\n    }\r\n    this.hp = Math.min(this.hp + params.amount, this.hpMax);\r\n    utils.log('{0} hp changed by {1}: {2} -> {3}',\r\n              this.character, params.amount, originalHp, this.hp);\r\n  }\r\n\r\n  changeSpeed(params) {\r\n    const originalSpeed = this.speed;\r\n    this.speed = Math.max(this.speed + params.amount, 1);\r\n    utils.log('{0} speed changed by {1}: {2} -> {3}',\r\n              this.character, params.amount, originalSpeed, this.speed);\r\n  }\r\n\r\n  changeAttack(params) {\r\n    const originalAttackLow = this.attackLow;\r\n    const originalAttackHigh = this.attackHigh;\r\n    const amountToGain = Math.max(-originalAttackLow, params.amount);\r\n    this.attackLow += amountToGain;\r\n    this.attackHigh += amountToGain;\r\n    utils.log('{0} attack changed by {1}: {2} -> {3}',\r\n              this.character,\r\n              params.amount,\r\n              [originalAttackLow, originalAttackHigh],\r\n              [this.attackLow, this.attackHigh]);\r\n  }\r\n\r\n  changeEnergy(params) {\r\n    const originalEnergy = this.energy;\r\n    this.energy = Math.max(this.energy + params.amount, 0);\r\n    utils.log('{0} energy changed by {1}: {2} -> {3}',\r\n              this.character,\r\n              params.amount,\r\n              originalEnergy,\r\n              this.energy);\r\n  }\r\n\r\n  takeDamage(params) {\r\n    const phaseParams = {\r\n        battle: params.battle,\r\n        damage: params.amount,\r\n        phase: 'EnemyDamage',\r\n        source: params.source\r\n    };\r\n    this.triggerPhase(phaseParams);\r\n    this.changeHp({\r\n        amount: -phaseParams.damage\r\n    });\r\n    if (this.hp > 0) {\r\n      return;\r\n    }\r\n    const allyTeamIndex = params.battle.getTeamOf[this.character];\r\n    this.triggerPhase({\r\n      allyTeam: params.battle.teams[allyTeamIndex],\r\n      allyTeamIndex: allyTeamIndex,\r\n      battle: params.battle,\r\n      character: this,\r\n      phase: 'Death',\r\n      source: params.source\r\n    });\r\n    if (this.character !== params.battle.activeCharacter.character) {\r\n      params.battle.activeCharacter.triggerPhase({\r\n        phase: 'Kill'\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Returns whether the turns should be skipped. */\r\n  triggerPhase(params) {\r\n    if (params.phase === 'SkipTurn' && this.punched) {\r\n      this.punched = false;\r\n      utils.log(\"{0} was punched. Skipping turn.\", this.character);\r\n      return true;\r\n    }\r\n    if (!(params.phase in this.triggers)) {\r\n      return false;\r\n    }\r\n    if (params.phase === 'InitCharacter' && this.processedInitCharacter) {\r\n      return false;\r\n    }\r\n\r\n    params.character = this;\r\n    var ret = false;\r\n    for (const item of this.triggers[params.phase]) {\r\n      if (items.useItemAbility(Object.assign(params, {\r\n            item: item\r\n        })) === true) {\r\n        ret = true;\r\n      }\r\n    }\r\n    if (params.phase === 'InitCharacter') {\r\n      this.processedInitCharacter = true;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  pickTargetUsingItems(enemyTeam) {\r\n    const params = {\r\n        currentTarget: utils.pickRandom(enemyTeam),\r\n        enemyTeam: enemyTeam,\r\n        phase: 'Target'\r\n    };\r\n\r\n    this.triggerPhase(params);\r\n    return params.currentTarget;\r\n  }\r\n}\r\n\r\nCharacter.prototype.toString = function() {\r\n  return this.character;\r\n}\r\n","import {Character} from './character.js';\r\nimport * as data from './data.js';\r\nimport * as utils from './utils.js';\r\nimport * as dungeonUtils from './dungeonUtils.js';\r\n\r\nfunction _findPositionWithinTeam(name, team) {\r\n  for (const position in team) {\r\n    const c = team[position];\r\n    if (c.character === name) {\r\n      return position;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\n\r\nexport class Battle {\r\n  constructor(team1, team2) {\r\n    this.summonedChicken = {};\r\n    this.summonedChickenStatue = {};\r\n    this.initTeams([team1, team2]);\r\n  }\r\n\r\n  initTeams(teams) {\r\n    this.teams = [[], []];\r\n    this.allCharacters = {};\r\n    this.getTeamOf = {};\r\n    for (const teamIndex in teams) {\r\n      const team = teams[teamIndex];\r\n      for (const i in team) {\r\n        this.addCopyOfCharacterToTeam(team[i], teamIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  addCharacterToTeam(character, teamIndex) {\r\n    var name = character.character;\r\n    const originalName = name;\r\n    var copyNum = 1;\r\n    while (name in this.allCharacters) {\r\n      copyNum++;\r\n      name = originalName + ' ' + copyNum;\r\n    }\r\n    character.character = name;\r\n    this.getTeamOf[name] = teamIndex;\r\n    this.allCharacters[name] = character;\r\n    character.triggerPhase({\r\n        allyTeamIndex: teamIndex,\r\n        battle: this,\r\n        character: character,\r\n        phase: 'InitCharacter'\r\n    });\r\n    this.teams[teamIndex].push(character);\r\n  }\r\n\r\n  addCopyOfCharacterToTeam(character, teamIndex) {\r\n    const toAdd = new Character(character);\r\n    this.addCharacterToTeam(toAdd, teamIndex);\r\n  }\r\n\r\n  addSummonToTeam(item, teamIndex) {\r\n    const template = data.getTemplates()[item.name];\r\n    const summon = new Character(dungeonUtils.getScaledTemplate(template, item.tier));\r\n    utils.log('Summoning {0} for team {1}', summon.character, teamIndex);\r\n    this.addCharacterToTeam(summon, teamIndex);\r\n  }\r\n\r\n  kill(character) {\r\n    const name = character.character;\r\n    if (character.angelAvailable) {\r\n      utils.log('reviving {0} with angel invite', name);\r\n      character.hp = Math.round(character.hpMax * 0.33);\r\n      character.angelAvailable = false;\r\n      return;\r\n    }\r\n    utils.log('killing: {0}', name);\r\n    const team = this.teams[this.getTeamOf[name]];\r\n    const pos = _findPositionWithinTeam(name, team);\r\n    if (pos < 0) {\r\n      throw Error(utils.format('InternalError: {0} is not in team {1}',\r\n                               name, team));\r\n    }\r\n    delete this.allCharacters[name];\r\n    delete this.getTeamOf[name];\r\n    team.splice(pos, 1);\r\n    if (name in this.summonedChicken) {\r\n      delete this.summonedChicken[name];\r\n    }\r\n  }\r\n\r\n  changeAllEnergy(iterable, amount) {\r\n    for (const key in iterable) {\r\n      iterable[key].changeEnergy({amount: amount});\r\n    }\r\n  }\r\n\r\n  checkAllHp() {\r\n    for (const name in this.allCharacters) {\r\n      const character = this.allCharacters[name];\r\n      if (character.hp <= 0) {\r\n        this.kill(character);\r\n      }\r\n    }\r\n  }\r\n\r\n  teamHasLost(index) {\r\n    return this.teams[index].length === 0;\r\n  }\r\n\r\n  anyTeamHasLost() {\r\n    for (const i in this.teams) {\r\n      if (this.teamHasLost(i)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  tick() {\r\n    if (this.anyTeamHasLost()) {\r\n      return;\r\n    }\r\n\r\n    this.activeCharacter = utils.pickRandom(this.allCharacters, 'speed');\r\n    const activeName = this.activeCharacter.character;\r\n    utils.log('\\n{0}\\'s turn:', activeName);\r\n    this.activeTeamIndex = this.getTeamOf[activeName];\r\n    const defendingTeam = this.teams[1 - this.activeTeamIndex];\r\n\r\n    this.changeAllEnergy(this.allCharacters, 2);\r\n\r\n    if (this.activeCharacter.triggerPhase({phase: 'SkipTurn'})) {\r\n      return;\r\n    }\r\n\r\n    this.activeCharacter.triggerPhase({\r\n        allyTeam: this.teams[this.activeTeamIndex],\r\n        allyTeamIndex: this.activeTeamIndex,\r\n        enemyTeam: defendingTeam,\r\n        battle: this,\r\n        phase: 'TurnStart'\r\n    });\r\n\r\n    this.checkAllHp();\r\n    if (this.anyTeamHasLost()) {\r\n      return;\r\n    }\r\n\r\n    var currentTarget = this.activeCharacter.pickTargetUsingItems(defendingTeam);\r\n\r\n    if (currentTarget.canBeSaved) {\r\n      const blockParams = {\r\n          currentTarget: currentTarget,\r\n          phase: 'Block'\r\n      };\r\n      for (const defendingCharacter of defendingTeam) {\r\n        defendingCharacter.triggerPhase(blockParams);\r\n      }\r\n      currentTarget = blockParams.currentTarget;\r\n    }\r\n\r\n    this.activeCharacter.triggerPhase({\r\n        allyTeam: this.teams[this.activeTeamIndex],\r\n        battle: this,\r\n        currentTarget: currentTarget, enemyTeam: defendingTeam,\r\n        phase: 'PostTarget'\r\n    });\r\n\r\n    utils.log('Main target: {0}', currentTarget.character);\r\n\r\n    const damageBase = utils.pickRandomWithinRange(\r\n        this.activeCharacter.attackLow,\r\n        this.activeCharacter.attackHigh\r\n    );\r\n    utils.log('Attack base damage: {0}', damageBase);\r\n\r\n    const preDamageParams = {\r\n        battle: this,\r\n        currentTarget: currentTarget,\r\n        damageBase: damageBase,\r\n        damageFinal: damageBase,\r\n        enemyTeam: defendingTeam,\r\n        phase: 'PreDamage'\r\n    };\r\n    this.activeCharacter.triggerPhase(preDamageParams);\r\n    if (preDamageParams.damageFinal !== damageBase) {\r\n      utils.log('Attack final damage: {0}', preDamageParams.damageFinal);\r\n    }\r\n\r\n    utils.log('Normal attack:');\r\n    currentTarget.takeDamage({\r\n        amount: preDamageParams.damageFinal,\r\n        battle: this,\r\n        source: this.activeCharacter\r\n    });\r\n\r\n    this.activeCharacter.triggerPhase({\r\n        allyTeam: this.teams[this.activeTeamIndex],\r\n        phase: 'PostDamage'\r\n    });\r\n\r\n    if (this.activeCharacter.poison > 0) {\r\n      utils.log('{0} takes poison damage', this.activeCharacter.character);\r\n      this.activeCharacter.changeHp({amount: -this.activeCharacter.poison});\r\n    }\r\n    this.checkAllHp();\r\n  }\r\n}\r\n","import {Battle} from './battle.js';\r\nimport * as utils from './utils.js';\r\n\r\nexport function runDungeon(team, waves) {\r\n  var currTeam = team;\r\n  for (const character of currTeam) {\r\n    character.processedInitCharacter = false;\r\n  }\r\n  utils.log('\\nTeam 0: {0}', JSON.stringify(team));\r\n  utils.log('\\n\\nStarting dungeon');\r\n  for (const index in waves) {\r\n    utils.log('\\nloading wave {0}', index);\r\n    const wave = waves[index];\r\n    utils.log('Team 1: {0}', JSON.stringify(wave));\r\n    const battle = new Battle(currTeam, wave);\r\n    utils.log(utils.deepCopyJson(battle));\r\n    while (true) {\r\n      battle.tick();\r\n\r\n      utils.log(utils.deepCopyJson(battle));\r\n\r\n      if (battle.teamHasLost(0)) {\r\n        return 1;\r\n      }\r\n\r\n      if (battle.teamHasLost(1)) {\r\n        break;\r\n      }\r\n    }\r\n    currTeam = battle.teams[0];\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function runMany(team, waves, numRuns) {\r\n  var winsForTeam0 = 0;\r\n  for (var i = 0; i < numRuns; i++) {\r\n    if (runDungeon(team, waves) === 0) {\r\n      winsForTeam0++;\r\n    }\r\n  }\r\n  return winsForTeam0;\r\n}\r\n","import * as Comlink from 'comlink';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport Worker from 'worker-loader!./worker';\r\nimport * as data from './data.js';\r\nimport { global } from './global.js';\r\nimport * as simulator from './simulator.js';\r\nimport * as utils from './utils.js';\r\n\r\nconst workerPool = [Comlink.wrap(new Worker()), Comlink.wrap(new Worker()), Comlink.wrap(new Worker()), Comlink.wrap(new Worker())]\r\n\r\nexport async function outputManyRuns(players, selectedDungeon, numRuns, progressCallback = () => {}) {\r\n  const output = [];\r\n  const team = [];\r\n\r\n  for (const player of players) {\r\n    if (player.username === '') {\r\n      continue;\r\n    }\r\n    output.push(utils.format('Player: {0}\\n', player.username));\r\n\r\n    const toEquip = [];\r\n    for (const item of player.items) {\r\n      if (item.name === '') {\r\n        continue;\r\n      }\r\n      toEquip.push(item);\r\n    }\r\n    if (toEquip.length === 0) {\r\n      output.push('No items found\\n');\r\n    } else {\r\n      const itemsToPrint = [];\r\n      for (const item of toEquip) {\r\n        itemsToPrint.push(utils.format('{0} {1}', item.name, item.tier));\r\n      }\r\n      output.push(utils.format('Items: {0}\\n', itemsToPrint.join(', ')));\r\n    }\r\n    output.push(utils.format(\r\n      'Monuments: {0} Health, {1} Power, {2} Speed\\n',\r\n      player.monuments.Health,\r\n      player.monuments.Power,\r\n      player.monuments.Speed\r\n    ));\r\n    if (player.monuments.Angel) {\r\n      output.push('Angel invite active\\n');\r\n    }\r\n    output.push('\\n');\r\n\r\n    team.push({\r\n      character: player.username,\r\n      hp: 100 + player.monuments.Health * 5,\r\n      hpMax: 100 + player.monuments.Health * 5,\r\n      speed: 10 + player.monuments.Speed * 1,\r\n      attackLow: 1 + player.monuments.Power * 1,\r\n      attackHigh: 10 + player.monuments.Power * 1,\r\n      energy: 0,\r\n      summoned: false,\r\n      items: toEquip,\r\n      angelAvailable: player.monuments.Angel\r\n    });\r\n  }\r\n  \r\n  const [season, dungeon] = JSON.parse(selectedDungeon);\r\n  const waves = data.getDungeon(season, dungeon);\r\n\r\n  global.verbose = false;\r\n  global.output = null;\r\n\r\n  const runPromiseResults = await doRunsInWorker(team, waves, numRuns, progressCallback);\r\n  const numWins = runPromiseResults.reduce((acc, cur) => acc + cur);\r\n\r\n  output.push(utils.format('Season {0} D{1}:\\n', season, dungeon));\r\n  output.push(utils.format('Wins out of {0} runs: {1} ({2}%)\\n',\r\n                           numRuns, numWins, numWins * 100 / numRuns));\r\n\r\n  output.push(\"\\nConfidence intervals (using normal approximation):\\n\");\r\n  const a = numWins + 1;\r\n  const b = numRuns - numWins + 1;\r\n  const mean = a / (a + b);\r\n  const stdDev = Math.sqrt(a * b / ((a + b) * (a + b) * (a + b + 1)));\r\n  output.push(utils.format('Estimated winrate: {0}%\\n', Math.round(mean * 100)));\r\n  output.push(utils.format('95%: {0}% - {1}%\\n',\r\n                           Math.round((mean - stdDev - stdDev) * 100),\r\n                           Math.round((mean + stdDev + stdDev) * 100)));\r\n  output.push(utils.format('99.7%: {0}% - {1}%\\n',\r\n                           Math.round((mean - stdDev - stdDev - stdDev) * 100),\r\n                           Math.round((mean + stdDev + stdDev + stdDev) * 100)));\r\n\r\n  return output;\r\n}\r\n\r\nasync function doRunsInWorker(team, waves, numRuns, progressCallback) {\r\n  let startedRuns = 0\r\n  let completedRuns = 0\r\n  let currentWorker = 0\r\n  let workerPromises = []\r\n\r\n  const handleRunResult = result => {\r\n    completedRuns++\r\n    progressCallback(completedRuns)\r\n    return result\r\n  }\r\n\r\n  while (startedRuns < numRuns) {\r\n    startedRuns++;\r\n\r\n    if (currentWorker === workerPool.length - 1) {\r\n      currentWorker = 0\r\n    } else {\r\n      currentWorker++\r\n    }\r\n\r\n    workerPromises.push(\r\n      workerPool[currentWorker].runDungeon(team, waves, 1)\r\n        .then(handleRunResult)\r\n    )\r\n  }\r\n\r\n  return Promise.all(workerPromises);\r\n}\r\n\r\nexport function outputSingleRun(players, selectedDungeon) {\r\n  const output = [];\r\n  const team = [];\r\n\r\n  for (const player of players) {\r\n    if (player.username === '') {\r\n      continue;\r\n    }\r\n    output.push(utils.format('Player: {0}\\n', player.username));\r\n\r\n    const toEquip = [];\r\n    for (const item of player.items) {\r\n      if (item.name === '') {\r\n        continue;\r\n      }\r\n      toEquip.push(item);\r\n    }\r\n    if (toEquip.length === 0) {\r\n      output.push('No items found\\n');\r\n    } else {\r\n      const itemsToPrint = [];\r\n      for (const item of toEquip) {\r\n        itemsToPrint.push(utils.format('{0} {1}', item.name, item.tier));\r\n      }\r\n      output.push(utils.format('Items: {0}\\n', itemsToPrint.join(', ')));\r\n    }\r\n    output.push(utils.format(\r\n      'Monuments: {0} Health, {1} Power, {2} Speed\\n',\r\n      player.monuments.Health,\r\n      player.monuments.Power,\r\n      player.monuments.Speed\r\n    ));\r\n    if (player.monuments.Angel) {\r\n      output.push('Angel invite active\\n');\r\n    }\r\n    output.push('\\n');\r\n\r\n    team.push({\r\n      character: player.username,\r\n      hp: 100 + player.monuments.Health * 5,\r\n      hpMax: 100 + player.monuments.Health * 5,\r\n      speed: 10 + player.monuments.Speed * 1,\r\n      attackLow: 1 + player.monuments.Power * 1,\r\n      attackHigh: 10 + player.monuments.Power * 1,\r\n      energy: 0,\r\n      summoned: false,\r\n      items: toEquip,\r\n      angelAvailable: player.monuments.Angel\r\n    });\r\n  }\r\n  \r\n  const [season, dungeon] = JSON.parse(selectedDungeon);\r\n  const waves = data.getDungeon(season, dungeon);\r\n\r\n  global.verbose = false;\r\n  global.output = null;\r\n\r\n  output.push('\\nExample Run:\\n');\r\n\r\n  global.output = [];\r\n  global.verbose = true;\r\n  output.push('\\nWinning team: \\n' + simulator.runDungeon(team, waves));\r\n  utils.extend(output, global.output);\r\n  global.verbose = false;\r\n  global.output = null;\r\n\r\n  return output;\r\n}\r\n","import './OutputLogs.css';\r\n\r\nexport function OutputLogs(props) {\r\n  return (\r\n    <div className=\"outputLogs\">{props.value}</div>\r\n  );\r\n}\r\n\r\nexport default OutputLogs;\r\n","import { getAllItemNamesAndBlank } from \"../data.js\";\r\nimport Dropdown from './Dropdown.js';\r\n\r\nfunction ItemDropdown(props) {\r\n  const itemNames = getAllItemNamesAndBlank();\r\n  const itemTiers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n  return (\r\n    <div className=\"item\">\r\n      <Dropdown\r\n        className=\"nameInput\"\r\n        selectedOption={props.item.name}\r\n        onChange={(event) => props.onItemChanged(event.target.value, props.item.tier)}\r\n        options={itemNames}\r\n      />\r\n      <Dropdown\r\n        selectedOption={props.item.tier}\r\n        onChange={(event) => props.onItemChanged(props.item.name, event.target.value)}\r\n        options={itemTiers}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ItemDropdown;\r\n","import * as dungeonUtils from '../dungeonUtils.js';\r\nimport { useState } from 'react';\r\n\r\nfunction LoadPlayerSection(props) {\r\n  const [rawInput, setRawInput] = useState('');\r\n\r\n  return (\r\n    <div className=\"loadPlayer\">\r\n      <div>Load from !api e, !appr, or BDSM profile:</div>\r\n      <div className=\"inputRow\">\r\n        <textarea className=\"input\" value={rawInput} onChange={(event) => {\r\n          var newPlayer = dungeonUtils.parseInventory(event.target.value);\r\n          if (newPlayer === null) {\r\n            newPlayer = props.player;\r\n          }\r\n          const newMonuments = { ...props.player.monuments };\r\n          Object.assign(newMonuments, dungeonUtils.parseMonuments(event.target.value));\r\n          props.onPlayerChanged(newPlayer.username, newPlayer.items, newMonuments)\r\n          setRawInput('');\r\n        }} />\r\n        <button className=\"button\" onClick={() => {\r\n          navigator.clipboard.writeText(dungeonUtils.serializePlayer(props.player))\r\n        }}> Copy BDSM profile </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadPlayerSection;","import './Monuments.css';\r\n\r\nfunction MonumentInput(props) {\r\n  return (\r\n    <input\r\n      className=\"monumentInput\"\r\n      type=\"number\"\r\n      min={0}\r\n      value={props.value}\r\n      onChange={(event) => { props.onValueChanged(event.target.value >>> 0) }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default MonumentInput;","import MonumentInput from './MonumentInput.js';\r\nimport './Monuments.css';\r\n\r\nfunction MonumentsSection(props) {\r\n  return <>\r\n    Monuments:\r\n    <div className=\"monumentsSection\">\r\n      <div className=\"statMonuments\">\r\n        <div>\r\n          Health:\r\n          <MonumentInput\r\n            value={props.monuments.Health}\r\n            onValueChanged={(newHealth) => {\r\n              let newMonuments = { ...props.monuments };\r\n              newMonuments.Health = newHealth;\r\n              props.onMonumentsChanged(newMonuments);\r\n            }} />\r\n        </div>\r\n        <div>\r\n          Power:\r\n          <MonumentInput\r\n            value={props.monuments.Power}\r\n            onValueChanged={(newPower) => {\r\n              let newMonuments = { ...props.monuments };\r\n              newMonuments.Power = newPower;\r\n              props.onMonumentsChanged(newMonuments);\r\n            }} />\r\n        </div>\r\n        <div>\r\n          Speed:\r\n          <MonumentInput\r\n            value={props.monuments.Speed}\r\n            onValueChanged={(newSpeed) => {\r\n              let newMonuments = { ...props.monuments };\r\n              newMonuments.Speed = newSpeed;\r\n              props.onMonumentsChanged(newMonuments);\r\n            }} />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        Angel:\r\n        <input type=\"checkbox\" checked={props.monuments.Angel}\r\n          onChange={(event) => {\r\n            let newMonuments = { ...props.monuments };\r\n            newMonuments.Angel = event.target.checked;\r\n            props.onMonumentsChanged(newMonuments);\r\n          }} />\r\n      </div>\r\n    </div>\r\n  </>;\r\n}\r\n\r\nexport default MonumentsSection;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons'\r\nimport * as character from '../character.js';\r\nimport * as dungeonUtils from '../dungeonUtils.js';\r\nimport { useState } from 'react';\r\n\r\nfunction PlayerSummary(props) {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n  return (\r\n    <div className=\"playerSummary\">\r\n      <button className=\"button\" onClick={() => setIsExpanded(!isExpanded)}>\r\n        {isExpanded ? <FontAwesomeIcon icon={faCaretUp} /> : <FontAwesomeIcon icon={faCaretDown} />}\r\n        {isExpanded ? \" Collapse\" : \" Expand\"} player info\r\n      </button>\r\n      {isExpanded ?\r\n        <div className=\"content\">\r\n          <Stats player={props.player} />\r\n          {props.player.items.map((item, index) => {\r\n            if (item.name === '') {\r\n              return null;\r\n            }\r\n            return <div className=\"itemDescription\" key={index}>\r\n              <span className=\"itemName\">{item.name} {item.tier}</span>{\": \"}\r\n              {dungeonUtils.getDescriptionOfItem(item)}\r\n            </div>\r\n          })}\r\n        </div>\r\n        : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Stats(props) {\r\n  const stats = character.getBaseStats(props.player)\r\n\r\n  return (\r\n    <div className=\"statsSection\">\r\n      <div className=\"stat\"><b>❤️ HP:</b> {stats.hpMax}</div>\r\n      <div className=\"stat\"><b>🏃 Speed: </b>{stats.speed}</div>\r\n      <div className=\"stat\"><b>⚔️ Attack: </b>{stats.attackLow}-{stats.attackHigh}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlayerSummary;\r\n","import ItemDropdown from './ItemDropdown.js';\r\nimport LoadPlayerSection from './LoadPlayerSection.js';\r\nimport MonumentsSection from './MonumentsSection.js';\r\nimport PlayerSummary from './PlayerSummary.js';\r\nimport './PlayerForm.css';\r\n\r\nfunction PlayerForm(props) {\r\n  function maybeAddDisabledClassName(className) {\r\n    return className + (props.player.username === \"\" ? \" disabled\" : \"\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"playerForm\">\r\n      <LoadPlayerSection\r\n        player={props.player}\r\n        onPlayerChanged={props.onPlayerChanged}\r\n      />\r\n      <div className={maybeAddDisabledClassName(\"profile\")}>\r\n        Username:\r\n        <input\r\n          className=\"usernameInput\"\r\n          value={props.player.username}\r\n          onChange={(event) => {\r\n            props.onPlayerChanged(event.target.value, props.player.items, props.player.monuments);\r\n          }}\r\n        />\r\n        {props.player.items.map((item, index) =>\r\n          <ItemDropdown\r\n            key={index}\r\n            item={item}\r\n            onItemChanged={(name, tier) => {\r\n              let newItems = [...props.player.items];\r\n              newItems[index] = { name: name, tier: parseInt(tier) };\r\n              props.onPlayerChanged(props.player.username, newItems, props.player.monuments);\r\n            }}\r\n          />\r\n        )}\r\n        <MonumentsSection\r\n          monuments={props.player.monuments}\r\n          onMonumentsChanged={\r\n            (newMonuments) =>\r\n              props.onPlayerChanged(props.player.username, props.player.items, newMonuments)\r\n          }\r\n        />\r\n        <PlayerSummary player={props.player}></PlayerSummary>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerForm;\r\n","import * as data from '../data.js';\r\nimport Dropdown from './Dropdown.js';\r\nimport * as dungeonUtils from '../dungeonUtils.js';\r\nimport * as localStorageUtils from '../localStorageUtils.js';\r\nimport { outputManyRuns, outputSingleRun } from '../test.js';\r\nimport OutputLogs from './OutputLogs.js';\r\nimport PlayerForm from './PlayerForm.js';\r\nimport { useState } from 'react';\r\nimport * as utils from '../utils.js';\r\nimport './Simulator.css';\r\n\r\nfunction Simulator() {\r\n  const dungeonList = data.getDungeonList();\r\n  const [runsCompleted, setRunsCompleted] = useState(0);\r\n  const [numRuns, setNumRuns] = localStorageUtils.useStateWithLocalStorage(\"numRuns\", 100);\r\n  const [selectedDungeon, setSelectedDungeon] = localStorageUtils.useStateWithLocalStorage(\r\n    \"selectedDungeon\",\r\n    dungeonList[0]);\r\n  const [outputText, setOutputText] = useState(\"Select your items with the dropdowns.\\nClick the button to start a test run!\");\r\n  const [rawInput, setRawInput] = useState('');\r\n\r\n  const [players, setPlayers] = localStorageUtils.useStateWithLocalStorage(\"players\", [\r\n    getInitialPlayer(),\r\n    getInitialPlayer(),\r\n    getInitialPlayer(),\r\n    getInitialPlayer(),\r\n    getInitialPlayer()\r\n  ]);\r\n\r\n  function getInitialPlayer() {\r\n    return {\r\n      username: \"\",\r\n      items: [\r\n        getInitialItem(),\r\n        getInitialItem(),\r\n        getInitialItem(),\r\n        getInitialItem()\r\n      ],\r\n      monuments: {\r\n        Health: 0,\r\n        Power: 0,\r\n        Speed: 0,\r\n        Angel: false\r\n      }\r\n    };\r\n  }\r\n\r\n  function parsePlayers(input) {\r\n    if (!input.startsWith('BDSM.partyStart')) {\r\n      return null;\r\n    }\r\n    const players = []\r\n    for (const rawPlayer of input.split('BDSM.playerDivider')) {\r\n      const newPlayer = getInitialPlayer();\r\n      Object.assign(newPlayer, dungeonUtils.parseInventory(rawPlayer));\r\n      Object.assign(newPlayer.monuments, dungeonUtils.parseMonuments(rawPlayer));\r\n      players.push(newPlayer);\r\n    }\r\n    while (players.length < 5) {\r\n      players.push(getInitialPlayer());\r\n    }\r\n    return players;\r\n  }\r\n\r\n  function getInitialItem() {\r\n    return { name: \"\", tier: 1 };\r\n  }\r\n\r\n  function onRunSingle() {\r\n    try {\r\n      const output = outputSingleRun(players, selectedDungeon);\r\n      setOutputText(output);\r\n    } catch(err) {\r\n      setOutputText(utils.format('An error has occurred: {0}', err.message));\r\n    }\r\n  }\r\n\r\n  async function onRunMany(progressCallback) {\r\n    try {\r\n      const output = await outputManyRuns(players, selectedDungeon, numRuns, progressCallback);\r\n      setOutputText(output);\r\n    } catch(err) {\r\n      setOutputText(utils.format('An error has occurred: {0}', err.message));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"simulator\">\r\n      <button onClick={() => {\r\n        localStorageUtils.clear();\r\n        window.location.reload();\r\n      }}>Clear Cache</button>\r\n      <br />\r\n      Load BDSM party profile:&nbsp;\r\n      <textarea value={rawInput} onChange={(event) => {\r\n        const newParty = parsePlayers(event.target.value);\r\n        if (newParty !== null) {\r\n          setPlayers(newParty);\r\n        }\r\n        setRawInput('');\r\n      }} />\r\n      <br />\r\n      <button onClick={() => {\r\n        navigator.clipboard.writeText(dungeonUtils.serializePlayers(players))\r\n      }}> Copy BDSM party profile </button>\r\n      <br />\r\n      <div className=\"party\">\r\n        {players.map((player, index) =>\r\n          <PlayerForm\r\n            key={index}\r\n            player={player}\r\n            onPlayerChanged={(username, items, monuments) => {\r\n              let newPlayers = [...players];\r\n              newPlayers[index] = {\r\n                username: username,\r\n                items: items,\r\n                monuments: monuments\r\n              };\r\n              setPlayers(newPlayers);\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n      [Season, Dungeon]:\r\n      <Dropdown\r\n        selectedOption={selectedDungeon}\r\n        onChange={(event) => { setSelectedDungeon(event.target.value); }}\r\n        options={dungeonList}\r\n      />\r\n      <br />\r\n      Number of runs:\r\n      <input type=\"number\" min={0} value={numRuns} onChange={(event) => {\r\n        setNumRuns(parseInt(event.target.value));\r\n      }} />\r\n      Run Progress: {`${runsCompleted}/${numRuns}`}\r\n      <br />\r\n      <button onClick={\r\n          () => onRunMany(\r\n            (runsCompleted) => {\r\n              if (runsCompleted % 10 === 0 || runsCompleted === numRuns) {\r\n                setRunsCompleted(runsCompleted)\r\n              }\r\n            }\r\n          )\r\n        }>\r\n        Run Simulations\r\n      </button>\r\n      <br />\r\n      <button onClick={onRunSingle}>\r\n        Example Run\r\n      </button>\r\n      <OutputLogs value={outputText}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Simulator;\r\n","import Simulator from \"./components/Simulator.js\";\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Boxbox Dungeon SiMulator (BDSM)</h1>\r\n      <div><i>Created by Zethorix#1064 and Oof#4389 (qaisklyi)</i></div>\r\n      <div><i>Thanks to Piefayth#6645 for contributing as well!</i></div>\r\n      <div><i><strong>(The pity system is currently not implemented)</strong></i></div>\r\n      <br />\r\n      <div>Boxbox Discord Feud is looking for 5 contestants to form a team and go against Seorin's team in the game show!</div>\r\n      <div>The show is completely similar to Family Feud and the questions are from the survey that you might have completed before!</div>\r\n      <div>Tag FQVBSina in Discord for more details, if you have questions, etc.</div>\r\n      <a target=\"_blank\" href=\"https://docs.google.com/forms/d/1uAlkovIQo0IOmZO0Hc6zrpeFkfP5s7odUgriO2J8DfY\">https://docs.google.com/forms/d/1uAlkovIQo0IOmZO0Hc6zrpeFkfP5s7odUgriO2J8DfY</a>\r\n      <p>Enter your party's items and monuments.</p>\r\n      <Simulator />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}